plugins {
	id 'java'
	id 'java-library'
	id 'maven-publish'
	id 'jacoco'

	id 'org.gradlex.extra-java-module-info' version '1.4'
}

group = 'net.shrimpworks'
version = "1.0"
if (System.getenv().containsKey("BUILD_NUMBER")) {
	version += ".${System.env.BUILD_NUMBER}"
} else version += ".DEV"

repositories {
	mavenCentral()
}

publishing {
	repositories {
		maven {
			name = "ShrimpWorks"
			url = 'https://code.shrimpworks.za.net/artefacts/'
			authentication {
				basic(BasicAuthentication)
			}
			credentials(PasswordCredentials) {
				username = "${System.env.ARTEFACTS_USER}"
				password = "${System.env.ARTEFACTS_PASSWORD}"
			}
		}
	}
	publications {
		maven(MavenPublication) {
			from components.java
		}
	}
}

dependencies {
	implementation project(':common')

	implementation 'com.backblaze.b2:b2-sdk-core:6.1.1'
	implementation 'com.backblaze.b2:b2-sdk-httpclient:6.1.1'

	// S3 compatible storage client
	implementation 'io.minio:minio:8.5.2'

		testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
}

extraJavaModuleInfo {
	failOnMissingModuleInfo.set(false)

	module("com.backblaze.b2:b2-sdk-core", "b2.sdk.core") {
		exports("com.backblaze.b2.client")
		exports("com.backblaze.b2.client.contentHandlers")
		exports("com.backblaze.b2.client.contentSources")
		exports("com.backblaze.b2.client.credentialsSources")
		exports("com.backblaze.b2.client.exceptions")
		exports("com.backblaze.b2.client.structures")
		exports("com.backblaze.b2.client.webApiClients")
	}

	module("com.backblaze.b2:b2-sdk-httpclient", "b2.sdk.httpclient") {
		requires("b2.sdk.core")
		requires("org.apache.httpcomponents.httpclient")
		exports("com.backblaze.b2.client.webApiHttpClient")
	}

	module("io.minio:minio", "minio") {
		requires("java.logging")
		requires("okhttp3")
		exports("io.minio")
		exports("io.minio.errors")
		exports("io.minio.messages")
	}
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required = true
	}
}
