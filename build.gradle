import java.nio.charset.StandardCharsets
import java.nio.file.Files
import java.nio.file.StandardOpenOption

plugins {
	id 'java'
	id 'application'
	id 'maven-publish'
	id 'jacoco'
	id 'test-report-aggregation'

	id 'org.beryx.jlink' version '2.26.0'
}

group = 'net.shrimpworks'
version = "1.9"
if (System.getenv().containsKey("DRONE_BUILD_NUMBER")) {
	version += ".${System.env.DRONE_BUILD_NUMBER}"
} else version += ".DEV"

application {
	mainClassName = 'net.shrimpworks.unreal.archive.Main'
	mainModule = 'unreal.archive'
}

compileJava {
	options.release = 17
}

jlink {
	mergedModuleName = "unreal.archive.merged"
	options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

	imageName = "${project.name}"
	imageDir = file("${buildDir}/${project.name}")

	jpackage {
		installerType = project.findProperty('installerType')
	}
}

repositories {
	mavenCentral()
	maven {
		url "https://code.shrimpworks.za.net/artefacts"
	}
}

def tarBinary = artifacts.add('archives', layout.buildDirectory.file("${project.name}.tgz").get().asFile) {
	type 'tgz'
	builtBy 'jlinkTar'
}

tasks.register('jlinkTar', Tar) {
	dependsOn jlinkZip
	archiveFileName = "${jlink.imageName.get()}.tgz"
	destinationDirectory = file("${buildDir}")
	compression = Compression.GZIP

	into("${jlink.imageName.get()}") {
		from jlink.imageDir
	}
}

publishing {
	repositories {
		maven {
			name = "ShrimpWorks"
			url = 'https://code.shrimpworks.za.net/artefacts/'
			authentication {
				basic(BasicAuthentication)
			}
			credentials(PasswordCredentials) {
				username = "${System.env.ARTEFACTS_USER}"
				password = "${System.env.ARTEFACTS_PASSWORD}"
			}
		}
	}
	publications {
		maven(MavenPublication) {
			from components.java
		}
		mavenLatest(MavenPublication) {
			pom {
				version = "latest"
			}
			artifact tarBinary
		}
	}
}

dependencies {
	implementation project(':common')
	implementation project(':storage')
	implementation project(':content')
	implementation project(':www')

	implementation 'net.shrimpworks:unreal-package-lib:1.10.24'
	implementation 'net.shrimpworks:package-dependency:1.4.21'

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.2'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.2'

	testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
}

processResources.doLast {
	// write version resource file
	Files.write(buildDir.toPath().resolve('resources/main/net/shrimpworks/unreal/archive/VERSION'),
			"${project.version}".getBytes(StandardCharsets.UTF_8),
			StandardOpenOption.CREATE, StandardOpenOption.TRUNCATE_EXISTING)
}

jar {
	manifest {
		attributes(
				'Implementation-Title': project.name,
				'Implementation-Version': project.version,
				'Main-Class': mainClassName,
		)
	}
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required = true
	}
}
